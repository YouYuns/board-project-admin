debug: false
management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.shyun.bordprojectadmin: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

server:
  port: 8081

spring:
  application.name: bordprojectadmin
  devtools:
    livereload:
      port: 35730
  datasource:
    #    url: ${SPRING_DATASOURCE_URL}
    #    username: ${SPRING_DATASOURCE_USERNAME}
    #    password: ${SPRING_DATASOURCE_PASSWORD}
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
  sql.init.mode: always
  data.rest:
    base-path: /api
    detection-strategy: annotated
  thymeleaf3.decoupled-logic: true
  security:
    oauth2:
      client:
        registration:
          # Environment variables는 {LOCAL_DB_ID}같이 이런식으로도 가능하고
          # Override configuration properties는 spring.securty.oauth2이런식으로직접지정도가능
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

---


springdoc:
  api-docs:
    path: /api-docs
